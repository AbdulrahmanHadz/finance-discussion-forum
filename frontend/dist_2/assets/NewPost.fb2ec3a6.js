import{_ as d,q as m,p as a,r as c,o as i,d as h,c as u,h as p,b as f}from"./index.51d15672.js";import{R as M}from"./ResultMessages.ee1a2669.js";import{P as _}from"./PostEditing.ed22746f.js";import{g as I}from"./goToPrevious.cf24a95f.js";import"./SubmitButton.4666d5fc.js";import"./SelectTags.89770421.js";const P={created(){this.form.userId=this.userId=m()},data(){return{form:{userId:null,title:null,content:null},tags:[],successMessage:null,errorMessage:null}},components:{PostEditing:_,ResultMessages:M},methods:{onSubmit(e){if(this.form=e.form,this.errorMessage=null,this.form.title==null||this.form.title.length==0||this.form.content==null||this.form.content.length==0){this.errorMessage="Fields cannot be empty";return}this.tags=e.tagIdsToAdd,a("posts",this.form).then(s=>{console.log(s);const t=s.data.data.id;this.postTags(t)}).catch(s=>{console.log(s);const t=s.response.data;"message"in t&&(this.errorMessage=t.message)})},postTags(e){console.log(this.tags),this.tags&&this.tags.length!=0?a(`tags/post/${e}`,{tagIdsToAdd:this.tags,userId:this.userId}).then(s=>{this.successMessage="Post added, redirecting to post.",console.log(s)}).catch(s=>{console.log(s);const t=s.response.data;"message"in t&&(this.errorMessage=t.message)}).finally(()=>{this.redirectToPost(e)}):(this.successMessage="Post added, redirecting to post.",this.redirectToPost(this.postId))},redirectToPost(e){setTimeout(()=>{this.$router.push({name:"post",params:{id:e}})},3e3)},cancelPostAddition(){I(this.$router)}}},E={class:"stack"};function R(e,s,r,t,o,n){const g=c("ResultMessages"),l=c("PostEditing");return i(),h("div",E,[o.successMessage!=null||o.errorMessage!=null?(i(),u(g,{key:0,successMessage:o.successMessage,errorMessage:o.errorMessage},null,8,["successMessage","errorMessage"])):p("",!0),f(l,{onUpdate:n.onSubmit,form:this.form,tags:this.tags,onCancel:n.cancelPostAddition},null,8,["onUpdate","form","tags","onCancel"])])}const x=d(P,[["render",R]]);export{x as default};
